<?xml version="1.0"?>
<testsuites>
  <testsuite name="PhantomJS 1.9.8 (Linux 0.0.0)" package="" timestamp="2015-06-25T09:15:08" id="0" hostname="testing-worker-linux-docker-dc46e835-3209-linux-6" tests="261" errors="0" failures="28" time="0.533">
    <properties>
      <property name="browser.fullName" value="Mozilla/5.0 (Unknown; Linux x86_64) AppleWebKit/534.34 (KHTML, like Gecko) PhantomJS/1.9.8 Safari/534.34"/>
    </properties>
    <testcase name="instance defined" time="0.011" classname="PhantomJS 1.9.8 (Linux 0.0.0).Axis Default constructor"/>
    <testcase name="constructor create the page with the correct name" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).Axis Default constructor"/>
    <testcase name="constructor create the page with the correct color" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Axis Default constructor"/>
    <testcase name="constructor create the page with the correct minValue" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Axis Default constructor"/>
    <testcase name="constructor create the page with the correct maxValue" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Axis Default constructor"/>
    <testcase name="constructor create the page with the correct ticks" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Axis Default constructor"/>
    <testcase name="constructor create the page with the correct scale" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Axis Default constructor"/>
    <testcase name="instance defined" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Axis Constructor"/>
    <testcase name="constructor create the page with the correct name" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Axis Constructor"/>
    <testcase name="constructor create the page with the correct color" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Axis Constructor"/>
    <testcase name="constructor create the page with the correct minValue" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Axis Constructor"/>
    <testcase name="constructor create the page with the correct maxValue" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Axis Constructor"/>
    <testcase name="constructor create the page with the correct ticks" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Axis Constructor"/>
    <testcase name="constructor create the page with the correct scale" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Axis Constructor"/>
    <testcase name="Axis updated with the correct name" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Axis #updateParameters"/>
    <testcase name="Axis updated with the correct color" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Axis #updateParameters"/>
    <testcase name="Axis updated with the correct minValue" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Axis #updateParameters"/>
    <testcase name="Axis updated with the correct maxValue" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).Axis #updateParameters"/>
    <testcase name="Axis updated with the correct getTicks" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Axis #updateParameters"/>
    <testcase name="Axis updated with the correct scale" time="0.005" classname="PhantomJS 1.9.8 (Linux 0.0.0).Axis #updateParameters"/>
    <testcase name="instance defined" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).BarChartFlow Default constructor"/>
    <testcase name="constructor create the flow with the correct flowColor" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).BarChartFlow Default constructor"/>
    <testcase name="instance defined" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).BarChartFlow Constructor"/>
    <testcase name="constructor create the flow with the correct flowColor" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).BarChartFlow Constructor"/>
    <testcase name="cflow updated with the correct flowColor" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).BarChartFlow #updateParameters"/>
    <testcase name="data inizialized in the correct way" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).BarChartFlow #initializeData">
      <failure type="">Expected 1 to equal 3.
    at /home/travis/build/DeltaGraphs/norris-nrti/frontend/test/unit/Model/BarChartFlowSpec.js:159
</failure>
    </testcase>
    <testcase name="data empty in the correct way" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).BarChartFlow #emptyData">
      <failure type="">Expected 1 to equal 3.
    at /home/travis/build/DeltaGraphs/norris-nrti/frontend/test/unit/Model/BarChartFlowSpec.js:195
</failure>
    </testcase>
    <testcase name="data updated in the correct way" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).BarChartFlow #inPlaceUpdate"/>
    <testcase name="BarChart created" time="0.003" classname="PhantomJS 1.9.8 (Linux 0.0.0).BarChart Constructor"/>
    <testcase name="graph Constructor called" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).BarChart Constructor"/>
    <testcase name="graph Constructor called" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).BarChart Constructor"/>
    <testcase name="graph created with the correct axisX" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).BarChart Constructor"/>
    <testcase name="graph created with the correct axisY" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).BarChart Constructor"/>
    <testcase name="graph created with the correct barOrientation" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).BarChart Constructor"/>
    <testcase name="graph created with the correct headers" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).BarChart Constructor"/>
    <testcase name="graph created with the correct background" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).BarChart Constructor"/>
    <testcase name="graph created with the correct sortable" time="0.005" classname="PhantomJS 1.9.8 (Linux 0.0.0).BarChart Constructor"/>
    <testcase name="graph created with the correct grouping control" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).BarChart Constructor"/>
    <testcase name="graph created with the correct legendOnPoint" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).BarChart Constructor"/>
    <testcase name="graph created with the correct flow" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).BarChart Constructor"/>
    <testcase name="graph created with the correct horizontalGrid" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).BarChart Constructor"/>
    <testcase name="BarChart created" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).BarChart #updateParameters"/>
    <testcase name="graph updated with the correct axisX" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).BarChart #updateParameters"/>
    <testcase name="graph updated with the correct axisY" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).BarChart #updateParameters"/>
    <testcase name="graph updated with the correct barOrientation" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).BarChart #updateParameters"/>
    <testcase name="graph updated with the correct headers" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).BarChart #updateParameters"/>
    <testcase name="graph updated with the correct background" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).BarChart #updateParameters"/>
    <testcase name="graph updated with the correct sortable" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).BarChart #updateParameters"/>
    <testcase name="graph updated with the correct grouping control" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).BarChart #updateParameters"/>
    <testcase name="graph updated with the correct legendOnPoint" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).BarChart #updateParameters"/>
    <testcase name="graph updated with the correct flow" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).BarChart #updateParameters"/>
    <testcase name="graph updated with the correct horizontalGrid" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).BarChart #updateParameters"/>
    <testcase name="graph addFlow called with the correct parameters" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).BarChart #addFlow"/>
    <testcase name="delete flow from graph" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).BarChart #deleteFlow"/>
    <testcase name="delete flow from graph" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).BarChart #replaceData">
      <failure type="">Expected 6 to equal 5.
    at /home/travis/build/DeltaGraphs/norris-nrti/frontend/test/unit/Model/BarChartSpec.js:301
</failure>
      <failure type="">TypeError: &apos;undefined&apos; is not an object (evaluating &apos;BarChart.getFlowList()[0].flow.getData()[1].value&apos;)
    at /home/travis/build/DeltaGraphs/norris-nrti/frontend/test/unit/Model/BarChartSpec.js:302
</failure>
    </testcase>
    <testcase name="BarChartFlow inizializeData called in the right way" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).BarChart #initializeData">
      <failure type="">Expected 1 to equal 2.
    at /home/travis/build/DeltaGraphs/norris-nrti/frontend/test/unit/Model/BarChartSpec.js:330
</failure>
    </testcase>
    <testcase name="BarChartFlow inPlaceUpdate called in the right way" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).BarChart #inPlaceUpdate"/>
    <testcase name="deleteData in the correct way" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).BarChart #deleteData"/>
    <testcase name="instance defined" time="0.005" classname="PhantomJS 1.9.8 (Linux 0.0.0).Flow Default constructor"/>
    <testcase name="constructor create the flow with the correct name" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).Flow Default constructor"/>
    <testcase name="instance defined" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).Flow Constructor"/>
    <testcase name="constructor create the flow with the correct name" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Flow Constructor"/>
    <testcase name="flow updated with the correct name" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Flow #updateParameters"/>
    <testcase name="instance defined" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Graph Default constructor"/>
    <testcase name="constructor create the graph with the correct title" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Graph Default constructor"/>
    <testcase name="constructor create the graph with the correct height" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Graph Default constructor"/>
    <testcase name="constructor create the graph with the correct width" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Graph Default constructor"/>
    <testcase name="constructor create the graph with the correct legend" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Graph Default constructor"/>
    <testcase name="constructor create the graph with the correct url" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Graph Default constructor"/>
    <testcase name="instance defined" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Graph Constructor"/>
    <testcase name="constructor create the graph with the correct title" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Graph Constructor"/>
    <testcase name="constructor create the graph with the correct height" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Graph Constructor"/>
    <testcase name="constructor create the graph with the correct width" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Graph Constructor"/>
    <testcase name="constructor create the graph with the correct legend" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).Graph Constructor"/>
    <testcase name="constructor create the graph with the correct url" time="0.011" classname="PhantomJS 1.9.8 (Linux 0.0.0).Graph Constructor"/>
    <testcase name="graph updated with the correct title" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Graph #updateParameters"/>
    <testcase name="graph updated with the correct height" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Graph #updateParameters"/>
    <testcase name="graph updated with the correct width" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Graph #updateParameters"/>
    <testcase name="graph updated with the correct legend" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Graph #updateParameters"/>
    <testcase name="graph updated with the correct url" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Graph #updateParameters"/>
    <testcase name="add flow into graph" time="0.006" classname="PhantomJS 1.9.8 (Linux 0.0.0).Graph #addFlow"/>
    <testcase name="delete flow from graph" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Graph #deleteFlow"/>
    <testcase name="delete flow from graph" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).Graph #replaceData">
      <failure type="">Expected 6 to equal 5.
    at /home/travis/build/DeltaGraphs/norris-nrti/frontend/test/unit/Model/GraphSpec.js:240
</failure>
      <failure type="">TypeError: &apos;undefined&apos; is not an object (evaluating &apos;Graph.getFlowList()[0].flow.getData()[1].value&apos;)
    at /home/travis/build/DeltaGraphs/norris-nrti/frontend/test/unit/Model/GraphSpec.js:241
</failure>
    </testcase>
    <testcase name="instance defined" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Legend Default constructor"/>
    <testcase name="constructor create the page with the correct position" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Legend Default constructor"/>
    <testcase name="constructor create the page with the correct font color" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Legend Default constructor"/>
    <testcase name="constructor create the page with the correct background" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Legend Default constructor"/>
    <testcase name="instance defined" time="0.011" classname="PhantomJS 1.9.8 (Linux 0.0.0).Legend Constructor"/>
    <testcase name="constructor create the page with the correct position" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).Legend Constructor"/>
    <testcase name="constructor create the page with the correct font color" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Legend Constructor"/>
    <testcase name="constructor create the page with the correct background" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Legend Constructor"/>
    <testcase name="legend updated with the correct position" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Legend #updateParameters"/>
    <testcase name="legend updated with the correct font color" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Legend #updateParameters"/>
    <testcase name="legend updated with the correct background" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).Legend #updateParameters"/>
    <testcase name="instance defined" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChartFlow Default constructor"/>
    <testcase name="constructor create the flow with the correct flowColor" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChartFlow Default constructor"/>
    <testcase name="constructor create the flow with the correct marker" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChartFlow Default constructor"/>
    <testcase name="constructor create the flow with the correct area" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChartFlow Default constructor"/>
    <testcase name="constructor create the flow with the correct max item displayed" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChartFlow Default constructor">
      <failure type="">Expected null to equal 20.
    at /home/travis/build/DeltaGraphs/norris-nrti/frontend/test/unit/Model/LineChartFlowSpec.js:59
</failure>
    </testcase>
    <testcase name="instance defined" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChartFlow Constructor"/>
    <testcase name="constructor create the flow with the correct flowColor" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChartFlow Constructor"/>
    <testcase name="constructor create the flow with the correct marker" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChartFlow Constructor"/>
    <testcase name="constructor create the flow with the correct area" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChartFlow Constructor"/>
    <testcase name="constructor create the flow with the correct max item displayed" time="0.011" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChartFlow Constructor"/>
    <testcase name="flow updated with the correct flowColor" time="0.006" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChartFlow #updateParameters"/>
    <testcase name="flow updated with the correct marker" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChartFlow #updateParameters"/>
    <testcase name="flow updated with the correct area" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChartFlow #updateParameters"/>
    <testcase name="flow updated with the correct max item displayed" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChartFlow #updateParameters"/>
    <testcase name="data initialized in the correct way" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChartFlow #initializeData">
      <failure type="">Expected 1 to equal 3.
    at /home/travis/build/DeltaGraphs/norris-nrti/frontend/test/unit/Model/LineChartFlowSpec.js:208
</failure>
    </testcase>
    <testcase name="data empty in the correct way" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChartFlow #emptyData">
      <failure type="">Expected 1 to equal 3.
    at /home/travis/build/DeltaGraphs/norris-nrti/frontend/test/unit/Model/LineChartFlowSpec.js:244
</failure>
    </testcase>
    <testcase name="data updated in the correct way" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChartFlow #inPlaceUpdate"/>
    <testcase name="streamUpdate call initializedData in the correct way" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChartFlow #streamUpdate"/>
    <testcase name="data removed in the correct way" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChartFlow #deleteData"/>
    <testcase name="LineChart created" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChart Constructor"/>
    <testcase name="graph Constructor called" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChart Constructor"/>
    <testcase name="graph Constructor called" time="0.011" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChart Constructor"/>
    <testcase name="graph created with the correct legendOnPoint" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChart Constructor"/>
    <testcase name="graph created with the correct axisX" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChart Constructor"/>
    <testcase name="graph created with the correct axisY" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChart Constructor"/>
    <testcase name="graph created with the correct viewFinder" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChart Constructor"/>
    <testcase name="graph created with the correct background" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChart Constructor"/>
    <testcase name="graph created with the correct interpolation" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChart Constructor"/>
    <testcase name="graph created with the correct horizontalGrid" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChart Constructor"/>
    <testcase name="graph created with the correct verticalGrid" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChart Constructor"/>
    <testcase name="graph updated with the correct legendOnPoint" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChart #updateParameters"/>
    <testcase name="graph updated with the correct axisX" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChart #updateParameters"/>
    <testcase name="graph updated with the correct axisY" time="0.006" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChart #updateParameters"/>
    <testcase name="graph updated with the correct viewFinder" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChart #updateParameters"/>
    <testcase name="graph updated with the correct background" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChart #updateParameters"/>
    <testcase name="graph updated with the correct flow" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChart #updateParameters"/>
    <testcase name="graph updated with the correct interpolation" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChart #updateParameters"/>
    <testcase name="graph updated with the correct horizontalGrid" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChart #updateParameters"/>
    <testcase name="graph updated with the correct verticalGrid" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChart #updateParameters"/>
    <testcase name="graph addFlow called with the correct parameters" time="0.012" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChart #addFlow"/>
    <testcase name="delete flow from graph" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChart #deleteFlow"/>
    <testcase name="delete flow from graph" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChart #replaceData">
      <failure type="">Expected 6 to equal 5.
    at /home/travis/build/DeltaGraphs/norris-nrti/frontend/test/unit/Model/LineChartSpec.js:294
</failure>
      <failure type="">TypeError: &apos;undefined&apos; is not an object (evaluating &apos;LineChart.getFlowList()[0].flow.getData()[1].value&apos;)
    at /home/travis/build/DeltaGraphs/norris-nrti/frontend/test/unit/Model/LineChartSpec.js:295
</failure>
    </testcase>
    <testcase name="LineChartFlow inizializeData called in the right way" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChart #initializeData">
      <failure type="">Expected 1 to equal 2.
    at /home/travis/build/DeltaGraphs/norris-nrti/frontend/test/unit/Model/LineChartSpec.js:324
</failure>
    </testcase>
    <testcase name="LineChartFlow inPlaceUpdate called in the right way" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChart #inPlaceUpdate"/>
    <testcase name="LineChartFlow streamUpdate called in the right way" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChart #streamUpdate">
      <failure type="">Expected 1 to equal 2.
    at /home/travis/build/DeltaGraphs/norris-nrti/frontend/test/unit/Model/LineChartSpec.js:397
</failure>
    </testcase>
    <testcase name="deleteData in the correct way" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChart #deleteData"/>
    <testcase name="instance defined" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChartFlow Default constructor"/>
    <testcase name="constructor create the flow with the correct marker" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChartFlow Default constructor"/>
    <testcase name="constructor create the flow with the correct max item displayed" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChartFlow Default constructor">
      <failure type="">Expected null to equal 100.
    at /home/travis/build/DeltaGraphs/norris-nrti/frontend/test/unit/Model/MapChartFlowSpec.js:52
</failure>
    </testcase>
    <testcase name="constructor create the flow with the correct trace" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChartFlow Default constructor"/>
    <testcase name="instance defined" time="0.011" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChartFlow Constructor"/>
    <testcase name="constructor create the flow with the correct marker" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChartFlow Constructor"/>
    <testcase name="constructor create the flow with the correct max item displayed" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChartFlow Constructor"/>
    <testcase name="constructor create the flow with the correct trace" time="0.006" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChartFlow Constructor"/>
    <testcase name="flow updated with the correct marker" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChartFlow #updateParameters"/>
    <testcase name="flow updated with the correct max item displayed" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChartFlow #updateParameters"/>
    <testcase name="flow updated with the correct trace" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChartFlow #updateParameters"/>
    <testcase name="data initialize in the correct way" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChartFlow #initializeData">
      <failure type="">Expected 1 to equal 3.
    at /home/travis/build/DeltaGraphs/norris-nrti/frontend/test/unit/Model/MapChartFlowSpec.js:192
</failure>
    </testcase>
    <testcase name="data empty in the correct way" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChartFlow #emptyData">
      <failure type="">Expected 1 to equal 3.
    at /home/travis/build/DeltaGraphs/norris-nrti/frontend/test/unit/Model/MapChartFlowSpec.js:227
</failure>
    </testcase>
    <testcase name="data updated in the correct way" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChartFlow #inPlaceUpdate"/>
    <testcase name="streamUpdate call initializedData in the correct way" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChartFlow #streamUpdate"/>
    <testcase name="data removed in the correct way" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChartFlow #deleteData"/>
    <testcase name="MapChart created" time="0.012" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChart Constructor"/>
    <testcase name="graph Constructor called" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChart Constructor"/>
    <testcase name="graph Constructor called" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChart Constructor"/>
    <testcase name="graph created with the correct legendOnPoint" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChart Constructor"/>
    <testcase name="graph created with the correct latitude" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChart Constructor"/>
    <testcase name="graph created with the correct longitude" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChart Constructor"/>
    <testcase name="graph created with the correct mapType" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChart Constructor"/>
    <testcase name="graph created with the correct zoom" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChart Constructor"/>
    <testcase name="graph created with the correct drag" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChart Constructor"/>
    <testcase name="graph created with the correct mapWidth" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChart Constructor"/>
    <testcase name="graph created with the correct mapHeight" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChart Constructor"/>
    <testcase name="MapChart created" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChart #updateParameters"/>
    <testcase name="graph updated with the correct legendOnPoint" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChart #updateParameters"/>
    <testcase name="graph updated with the correct latitude" time="0.006" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChart #updateParameters"/>
    <testcase name="graph updated with the correct longitude" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChart #updateParameters"/>
    <testcase name="graph updated with the correct mapType" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChart #updateParameters"/>
    <testcase name="graph updated with the correct zoom" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChart #updateParameters"/>
    <testcase name="graph update with the correct drag" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChart #updateParameters"/>
    <testcase name="graph updated with the correct flows" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChart #updateParameters"/>
    <testcase name="graph updated with the correct mapWidth" time="0.011" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChart #updateParameters"/>
    <testcase name="graph updated with the correct mapHeight" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChart #updateParameters"/>
    <testcase name="add flow into mapchart" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChart #addFlow"/>
    <testcase name="delete flow from graph" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChart #deleteFlow"/>
    <testcase name="delete flow from graph" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChart #replaceData">
      <failure type="">Expected 6 to equal 5.
    at /home/travis/build/DeltaGraphs/norris-nrti/frontend/test/unit/Model/MapChartSpec.js:293
</failure>
      <failure type="">TypeError: &apos;undefined&apos; is not an object (evaluating &apos;MapChart.getFlowList()[0].flow.getData()[1].value&apos;)
    at /home/travis/build/DeltaGraphs/norris-nrti/frontend/test/unit/Model/MapChartSpec.js:294
</failure>
    </testcase>
    <testcase name="inizialize flowList" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChart #initializeData">
      <failure type="">Expected 1 to equal 2.
    at /home/travis/build/DeltaGraphs/norris-nrti/frontend/test/unit/Model/MapChartSpec.js:322
</failure>
    </testcase>
    <testcase name="inizialize flowList" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChart #inPlaceUpdate"/>
    <testcase name="inizialize flowList" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChart #streamUpdate">
      <failure type="">Expected 1 to equal 2.
    at /home/travis/build/DeltaGraphs/norris-nrti/frontend/test/unit/Model/MapChartSpec.js:392
</failure>
    </testcase>
    <testcase name="deleteData in the correct way" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChart #deleteData"/>
    <testcase name="instance defined" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).Page Default constructor"/>
    <testcase name="constructor create the page with the correct name" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Page Default constructor"/>
    <testcase name="constructor create the page with the correct description" time="0.011" classname="PhantomJS 1.9.8 (Linux 0.0.0).Page Default constructor"/>
    <testcase name="constructor create the page with the correct number of graphsPerRow" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).Page Default constructor"/>
    <testcase name="constructor create the page with the correct number of graphsPerCol" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Page Default constructor"/>
    <testcase name="constructor create the page with the correct socketURL" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Page Default constructor"/>
    <testcase name="constructor create the page with the correct number of graphs" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Page Default constructor"/>
    <testcase name="instance defined" time="0.007" classname="PhantomJS 1.9.8 (Linux 0.0.0).Page Constructor"/>
    <testcase name="constructor create the page with the correct name" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Page Constructor"/>
    <testcase name="constructor create the page with the correct description" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Page Constructor"/>
    <testcase name="constructor create the page with the correct number of graphsPerRow" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).Page Constructor"/>
    <testcase name="constructor create the page with the correct number of graphsPerCol" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Page Constructor"/>
    <testcase name="constructor create the page with the correct socketURL" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Page Constructor"/>
    <testcase name="constructor create the page with the correct number of graphs" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Page Constructor"/>
    <testcase name="page updated with the correct name" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Page #updateParameters"/>
    <testcase name="page updated with the correct description" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Page #updateParameters"/>
    <testcase name="page updated with the correct number of graphsPerRow" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Page #updateParameters"/>
    <testcase name="page updated with the correct number of graphsPerCol" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Page #updateParameters"/>
    <testcase name="graphs added correctly to the list" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Page #addGraph"/>
    <testcase name="instance defined" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).PagesList Default constructor"/>
    <testcase name="constructor create an array with the exactly number of pages" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).PagesList Default constructor"/>
    <testcase name="instance defined" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).PagesList Constructor"/>
    <testcase name="constructor create an array with the exactly number of pages" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).PagesList Constructor"/>
    <testcase name="page added to the pagesList" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).PagesList #addPage"/>
    <testcase name="default constructor create the flow in the correct way" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).TableFlow Default constructor">
      <failure type="">Expected null to equal 100.
    at /home/travis/build/DeltaGraphs/norris-nrti/frontend/test/unit/Model/TableFlowSpec.js:45
</failure>
    </testcase>
    <testcase name="constructor create the flow with the correct max item displayed" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).TableFlow Constructor"/>
    <testcase name="flow updated with the correct max item displayed" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).TableFlow #updateParameters"/>
    <testcase name="data inizialize in the correct way" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).TableFlow #initializeData">
      <failure type="">Expected 1 to equal 3.
    at /home/travis/build/DeltaGraphs/norris-nrti/frontend/test/unit/Model/TableFlowSpec.js:153
</failure>
    </testcase>
    <testcase name="data empty in the correct way" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).TableFlow #emptyData">
      <failure type="">Expected 1 to equal 3.
    at /home/travis/build/DeltaGraphs/norris-nrti/frontend/test/unit/Model/TableFlowSpec.js:189
</failure>
    </testcase>
    <testcase name="data updated in the correct way" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).TableFlow #inPlaceUpdate"/>
    <testcase name="streamUpdate call initializedData in the correct way" time="0.006" classname="PhantomJS 1.9.8 (Linux 0.0.0).TableFlow #streamUpdate"/>
    <testcase name="data removed in the correct way" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).TableFlow #deleteData"/>
    <testcase name="Table created" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).Table Constructor"/>
    <testcase name="graph Constructor called" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Table Constructor"/>
    <testcase name="graph Constructor called" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Table Constructor"/>
    <testcase name="graph created with the correct headers" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Table Constructor"/>
    <testcase name="graph created with the correct item displayed per page" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).Table Constructor"/>
    <testcase name="graph created with the correct add data position" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Table Constructor"/>
    <testcase name="graph created with the correct sortable" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Table Constructor"/>
    <testcase name="graph created with the correct sort" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Table Constructor"/>
    <testcase name="graph created with the correct appearance" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Table Constructor"/>
    <testcase name="Table created" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).Table #updateParameters"/>
    <testcase name="graph updated with the correct headers" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).Table #updateParameters"/>
    <testcase name="graph updated with the correct item displayed per page" time="0.011" classname="PhantomJS 1.9.8 (Linux 0.0.0).Table #updateParameters"/>
    <testcase name="graph updated with the correct add data position" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).Table #updateParameters"/>
    <testcase name="graph updated with the correct sortable" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Table #updateParameters"/>
    <testcase name="graph updated with the correct sort" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Table #updateParameters"/>
    <testcase name="graph updated with the correct appearance" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).Table #updateParameters"/>
    <testcase name="graph updated with the correct flow" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Table #updateParameters"/>
    <testcase name="graph addFlow called with the correct parameters" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Table #addFlow"/>
    <testcase name="delete flow from graph" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Table #deleteFlow"/>
    <testcase name="delete flow from graph" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Table #replaceData">
      <failure type="">TypeError: &apos;undefined&apos; is not an object (evaluating &apos;Table.getFlowList()[0].flow.getData()[1].value&apos;)
    at /home/travis/build/DeltaGraphs/norris-nrti/frontend/test/unit/Model/TableSpec.js:300
</failure>
    </testcase>
    <testcase name="TableFlow inizializeData called in the right way" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).Table #initializeData">
      <failure type="">Expected 1 to equal 2.
    at /home/travis/build/DeltaGraphs/norris-nrti/frontend/test/unit/Model/TableSpec.js:330
</failure>
    </testcase>
    <testcase name="TableFlow inPlaceUpdate called in the right way" time="0.008" classname="PhantomJS 1.9.8 (Linux 0.0.0).Table #inPlaceUpdate"/>
    <testcase name="inizialize flowList" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).Table #streamUpdate">
      <failure type="">Expected 1 to equal 2.
    at /home/travis/build/DeltaGraphs/norris-nrti/frontend/test/unit/Model/TableSpec.js:400
</failure>
    </testcase>
    <testcase name="deleteData in the correct way" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).Table #deleteData"/>
    <testcase name="urlProvider created" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).UrlProvider Constructor"/>
    <testcase name="urlProvider updated" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).UrlProvider #setUrl"/>
    <testcase name="scope.mapChart is defined" time="0.01" classname="PhantomJS 1.9.8 (Linux 0.0.0).BarChartController"/>
    <testcase name="controller is defined" time="0.003" classname="PhantomJS 1.9.8 (Linux 0.0.0).BarChartController"/>
    <testcase name="socketConnection works fine" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).BarChartController">
      <failure type="">Expected undefined to equal 1.
    at /home/travis/build/DeltaGraphs/norris-nrti/frontend/test/unit/Controller/BarChartControllerSpec.js:46
</failure>
    </testcase>
    <testcase name="scope.lineChart is defined" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChartController"/>
    <testcase name="controller is defined" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChartController"/>
    <testcase name="socketConnection works fine" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChartController socketConnection">
      <failure type="">ReferenceError: Can&apos;t find variable: count
    at /home/travis/build/DeltaGraphs/norris-nrti/frontend/test/unit/Controller/LineChartControllerSpec.js:51
</failure>
    </testcase>
    <testcase name="scope.mapChart is defined" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChartController"/>
    <testcase name="controller is defined" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChartController"/>
    <testcase name="socketConnection works fine" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChartController #socketConnection">
      <failure type="">ReferenceError: Can&apos;t find variable: count
    at /home/travis/build/DeltaGraphs/norris-nrti/frontend/test/unit/Controller/MapChartControllerSpec.js:51
</failure>
    </testcase>
    <testcase name="works fine" time="0.007" classname="PhantomJS 1.9.8 (Linux 0.0.0).RootController Constructor"/>
    <testcase name="scope.table is defined" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).TableController"/>
    <testcase name="controller is defined" time="0.001" classname="PhantomJS 1.9.8 (Linux 0.0.0).TableController"/>
    <testcase name="socketConnection works fine" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).TableController socketConnection">
      <failure type="">ReferenceError: Can&apos;t find variable: count
    at /home/travis/build/DeltaGraphs/norris-nrti/frontend/test/unit/Controller/TableControllerSpec.js:51
</failure>
    </testcase>
    <testcase name="works fine" time="0.015" classname="PhantomJS 1.9.8 (Linux 0.0.0).BarChartView Constructor"/>
    <testcase name="works fine" time="0.003" classname="PhantomJS 1.9.8 (Linux 0.0.0).LineChartView Constructor"/>
    <testcase name="works fine" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).MapChartView Constructor"/>
    <testcase name="works fine" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).PageView Constructor"/>
    <testcase name="works fine" time="0.003" classname="PhantomJS 1.9.8 (Linux 0.0.0).PagesListView Constructor">
      <failure type="">Expected 0 to be 3.
    at /home/travis/build/DeltaGraphs/norris-nrti/frontend/test/unit/View/PagesListViewSpec.js:49
</failure>
    </testcase>
    <testcase name="works fine" time="0.002" classname="PhantomJS 1.9.8 (Linux 0.0.0).TableView Constructor"/>
    <system-out><![CDATA[
]]></system-out>
    <system-err/>
  </testsuite>
</testsuites>
